@{
    ViewBag.Title = "SIF Generation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">

            <div class="card">
                <div class="card-header">
                    <a href="#"><i class="fas fa-home"></i></a> / <a onclick="goBack('');"><i class="fas fa-user-circle"></i></a> / SIF Generation
                </div>
                <form class="form-horizontal" role="form" id="frmSif">
                    <div class="card-body">
                        <div class="card-title">
                            <h3 class="text-left title-2">SIF Generation</h3>
                        </div>
                        <hr>
                        <div class="box-content alerts">
                            <div class="alert alert-danger" id="diverrorMessage" style="display:none;">
                                <button type="button" class="close" onclick="closeDiv();"  >×</button>
                                <label id="lblerrorMessage" style="float:left !important"></label>
                            </div>
                            <div class="alert alert-success" id="divMessage" style="display:none;">
                                <button type="button" class="close" onclick="closeDiv();"  >×</button>
                                <label id="lblMessage" style="float:left !important"></label>
                            </div>
                        </div>

                       
                        <div class="row form-group">
                            <div class="col-2">
                                <label for="cc-payment" class="control-label">Agent</label>
                            </div>
                            <div class="col-3">
                                @Html.DropDownList("AgentId", null, "Select Agent",
                                new { @class = "form-control js-example-basic-single", style = "width: 95%", maxlength = "50", onchange = "fillSubAgents($(this).val())" })
                            </div>
                            <div class="col-2">
                                <label for="cc-payment" class="control-label">Sub Agent</label>
                            </div>
                            <div class="col-4">
                                @Html.DropDownList("SubAgentId", null, "Select Sub Agent",
                                new { @class = "form-control js-example-basic-single", style = "width: 95%", maxlength = "50", onchange = "fillCompanies($(this).val())" })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-2">
                                <label for="cc-payment" class="control-label">Company</label>
                            </div>
                            <div class="col-3">
                                @Html.DropDownList("CompanyId", null, "Select Company",
                                new { @class = "form-control js-example-basic-single", style = "width: 95% !important", maxlength = "50" })
                            </div>
                            <div class="col-2">
                                <label for="cc-payment" class="control-label">Personal No</label>
                            </div>
                            <div class="col-4">
                                @Html.TextBox("PersonalNo", null, new {id="PersonalNo", @class = "form-control ", placeholder = "Personal No" })
                            </div>
                        </div>

                        <div class="row form-group">
                            <div class="col-2">
                                <label for="cc-payment" class="control-label">Year</label>
                            </div>
                            <div class="col-3">
                                @Html.DropDownList("Year", null, "Select Year",
                                new { @class = "form-control", style = "width: 95%", maxlength = "50" })
                            </div>
                            <div class="col-2">
                                <label for="cc-payment" class="control-label">Month</label>
                            </div>
                            <div class="col-4">
                                @Html.DropDownList("Month", null, "Select Month",
                                new { @class = "form-control", style = "width: 95%;", maxlength = "50" })
                            </div>
                        </div>

                        <button type="button" class="btn btn-primary btn-sm" style="margin-left:45%" onclick="getEmployees();">
                            <i class="fa fa-dot-circle-o"></i> Get Employee(s)
                        </button>
                        <br /><br />

                        <div class="table-responsive table--no-card m-b-30">
                            <table id="SifEmployee" class="table table-borderless table-striped table-earning">
                                <thead>
                                    <tr>
                                        <th style="width: 5%">
                                            <input id="chkAll" type="checkbox" onchange="checkAll();" />
                                        </th>
                                        <th>Employee</th>
                                        <th>Personal No</th>
                                        <th>Routing</th>
                                        <th>IBAN#</th>
                                        <th>Basic</th>
                                        <th>Housing</th>
                                        <th>Conveyance</th>
                                        <th>Medical </th>
                                        <th>Annual<br />Passage</th>
                                        <th>Overtime</th>
                                        <th>Others</th>
                                        <th>Leave<br />Encashment</th>
                                        <th>Leaves<br />Period</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @*@foreach (var item in Model.HRPR_SifDetail_TR)
                                        {
                                            <tr>
                                                <td>@item.SifId</td>
                                                <td>@item.ProcessType</td>
                                                <td>@item.Reason</td>

                                                <td>
                                                    <div class="table-data-feature">

                                                        <button class="item" data-toggle="tooltip" data-placement="top" title="Edit" onclick="fancyitSifm('@item.SifId')">
                                                            <i class="zmdi zmdi-edit"></i>
                                                        </button>
                                                        <button class="item" data-toggle="modal" data-target="#myModal" data-placement="top" title="Delete" onclick="DeleteRecord('@item.SifId')">
                                                            <i class="zmdi zmdi-delete"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }*@

                                </tbody>
                                <tfoot id="SifEmployeeFooter">
                                    <tr>
                                        <th>Total</th>
                                        <th id="totalCount"></th>
                                        <th colspan="3"></th>
                                        <th id="totalBasic"></th>
                                        <th id="totalHousing"></th>
                                        <th id="totalConveyance"></th>
                                        <th id="totalMedical"></th>
                                        <th id="totalAnnual"></th>
                                        <th id="totalOvertime"></th>
                                        <th id="totalOthers"></th>
                                        <th id="totalEncash"></th>
                                        <th></th>
                                        <th id="totalEmployeeAmount"></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                        <div class="row form-group">
                            <div class="col-2">

                            </div>
                            <div class="col-3">

                            </div>
                            <div class="col-2">
                                
                            </div>
                            <div class="col-4">
                                <label for="cc-payment" class="control-label" id="lblGrandTotal" style="font-size:24pt !important;"></label>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModalSifConfirmation">
                            <i class="fa fa-dot-circle-o"></i> Generate SIF
                        </button>
                        <button type="reset" class="btn btn-primary btn-sm">
                            <i class="fa fa-ban"></i> Reset
                        </button>
                        <button type="button" class="btn btn-primary btn-sm" onclick="goBack('');">
                            <i class="fa fa-dot-circle-o"></i> Back
                        </button>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>



<!-- Modal Error -->
<div id="myModalError" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">SIF Generation Error</h4>
            </div>
            <div class="modal-body">
                <h5 id="lblError" style="color:red;"></h5>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="~/Content/vendor/jquery.validate.min.js"></script>
<script type="text/javascript">
    $('#frmSif').validate({
        submitHandler: function (form) {
            $.ajax({
                url: '@Url.Action("Sif", "Sif", new { q = Request.QueryString["q"].ToString() })',
                type: "POST",
                data: $(form).serialize(),
                success: function (response) {
                    if (response.success === true) {
                        goBack(response.response);
                    }
                    else {
                        $('#lblMessage').text(response.response);
                        $('#divMessage').show();
                    }
                }
            });
        }
    });

    function goBack(message) {
        window.location = '/Sif/Sif?q=@Request.QueryString["q"].ToString()&message=' + message;
    }

    function checkAll() {
        if ($('#chkAll').prop("checked")) {
            $('input:checkbox').each(function () {
                if ($(this).attr('id') != 'chkAll') {
                    $(this).prop("checked", true);

                }
                
            });
        }
        else {
            $('input:checkbox').each(function () {
                $(this).prop("checked", false);
            });
        }

        sumFooterValues();
    };

    function getEmployees() {
        var oTable = $('#SifEmployee').dataTable();
        if ($('#CompanyId').val() == '') {
            $('#lblerrorMessage').text('Please select company');
            $('#diverrorMessage').show();
            return false;
        }

        if ($('#Year').val() == '') {
            $('#lblerrorMessage').text('Please select Year');
            $('#diverrorMessage').show();
            return false;
        }

        if ($('#Month').val() == '') {
            $('#lblerrorMessage').text('Please select Month');
            $('#diverrorMessage').show();
            return false;
        }

        var companyId = $('#CompanyId').val();
        var personalNo = $('#PersonalNo').val();
        var year = $('#Year').val();
        var month = $('#Month').val();
        $.ajax({
            url: '@Url.Action("GetEmployeesPendingSIF", "Common", new { q = Request.QueryString["q"].ToString() })',
            dataType: 'json',
            data: { "companyId": companyId, "PersonalNo": personalNo, "Month": month, "Year": year },
            success: function (data) {
                $('#lblerrorMessage').text('');
                $('#diverrorMessage').hide();
                $('#lblMessage').text('');
                $('#divMessage').hide();
                $('#SifEmployee').dataTable({
                    paging: true,
                    sort: true,
                    searching: true,
                    bDestroy: true,
                    bRetreive: true,
                    data: data.active,
                    aLengthMenu: [[-1, 1, 25, 50, 100, 250], ["All", 1, 25, 50, 100, 250]],
                    columns: [
                         {
                             'data': "EmpId",
                             'render': function (data, type, full) {
                                 return '<input id=' + full.EmpId + ' type="checkbox" value=' + full.EmpId + ' onclick="sumFooterValues();">';
                             }
                         },
                        { 'data': "FullName" },
                        { 'data': "PersonalNo" },
                        { 'data': "RoutingCode" },
                        { 'data': "IBAN" },
                        { 'data': "BasicSalary" },
                        {
                            'data': "Housing",
                            'render': function (data, type, full) {
                                return "<input type='number' id='House_" + full.EmpId + "' value='" + data + "' class='form-control' style='width:80px !important;text-align:right !important' />";
                            }
                        },
                        {
                            'data': "Travel",
                            'render': function (data, type, full) {
                                return "<input type='number' id='Conv_" + full.EmpId + "' value='" + data + "' class='form-control' style='width:80px !important;text-align:right !important' />";
                            }
                        },
                        {
                            'render': function (data, type, full) {
                                return "<input type='number' id='Med_" + full.EmpId + "' value='0.00' class='form-control' style='width:80px !important;text-align:right !important' />";
                            }
                        },
                        {
                            'render': function (data, type, full) {
                                return "<input type='number' id='Ann_" + full.EmpId + "' value='0.00' class='form-control' style='width:80px !important;text-align:right !important' />";
                            }
                        },
                        {
                            'render': function (data, type, full) {
                                return "<input type='number' id='Other_" + full.EmpId + "' value='0.00' class='form-control' style='width:80px !important;text-align:right !important' />";
                            }
                        },
                        {
                            'render': function (data, type, full) {
                                return "<input type='number' id='Over_" + full.EmpId + "' value='0.00' class='form-control' style='width:80px !important;text-align:right !important' />";
                            }
                        },
                        {
                            'render': function (data, type, full) {
                                return "<input type='number' id='Encash_" + full.EmpId + "' value='0.00' class='form-control' style='width:80px !important;text-align:right !important' />";
                            }
                        },
                        {
                            'render': function (data, type, full) {
                                return "<input type='number' id='Leaves_" + full.EmpId + "' value='0' class='form-control' style='width:80px !important;text-align:right !important' />";
                            }
                        },
                        {
                            'render': function (data, type, full) {
                                return " <label for='cc-payment' class='control-label'></label>";
                            }
                        },
                    ]
                    //     ,
                    //dom: 'Blfrtip'
                    //buttons: [
                    //    'copy', 'csv', 'excel', 'pdf', 'print'
                    //]
                });
                sumFooterValuesUnchecked();
            }
        });
    }

    function sumFooterValues() {
        var totalBasic = 0, totalHousing = 0, totalConveyance = 0, totalMedical = 0;
        var totalAnnual = 0, totalOvertime = 0, totalOthers = 0, totalEncash = 0;
        var totalCount = 0;
        $('input:checkbox:checked').each(function () {
            var t = 0;
            var basic = $(this).closest('tr').find('td').eq(5).text();
            var housing = $(this).closest('tr').find('td').eq(6).find('input').val();
            var conveyance = $(this).closest('tr').find('td').eq(7).find('input').val();
            var medical = $(this).closest('tr').find('td').eq(8).find('input').val();
            var annual = $(this).closest('tr').find('td').eq(9).find('input').val();
            var overtime = $(this).closest('tr').find('td').eq(10).find('input').val();
            var others = $(this).closest('tr').find('td').eq(11).find('input').val();
            var encash = $(this).closest('tr').find('td').eq(12).find('input').val();
            
            if (basic > 0) {
                t = t + parseFloat(basic);
                totalBasic = parseFloat(totalBasic) + parseFloat(basic);
                totalCount = totalCount + 1;
            }
            if (housing > 0) { totalHousing = parseFloat(totalHousing) + parseFloat(housing); t = t + parseFloat(housing); }
            if (conveyance > 0) { totalConveyance = parseFloat(totalConveyance) + parseFloat(conveyance); t = t + parseFloat(conveyance); }
            if (medical > 0) { totalMedical = parseFloat(totalMedical) + parseFloat(medical); t = t + parseFloat(medical); }
            if (annual > 0) { totalAnnual = parseFloat(totalAnnual) + parseFloat(annual); t = t + parseFloat(annual); }
            if (overtime > 0) { totalOvertime = parseFloat(totalOvertime) + parseFloat(overtime); t = t + parseFloat(overtime); }
            if (others > 0) { totalOthers = parseFloat(totalOthers) + parseFloat(others); t = t + parseFloat(others); }
            if (encash > 0) { totalEncash = parseFloat(totalEncash) + parseFloat(encash); t = t + parseFloat(encash); }

            
            $(this).closest('tr').find('td').eq(14).find('label').html(t);
            

        });

        $("#totalCount").html(totalCount);

        $("#totalBasic").html(totalBasic);
        $("#totalHousing").html(totalHousing);
        $("#totalConveyance").html(totalConveyance);
        $("#totalMedical").html(totalMedical);
        $("#totalAnnual").html(totalAnnual);
        $("#totalOvertime").html(totalOvertime);
        $("#totalOthers").html(totalOthers);
        $("#totalEncash").html(totalEncash);
        var gTotal = totalBasic + totalHousing + totalConveyance + totalMedical + totalAnnual + totalOvertime + totalOthers + totalEncash;
        $('#lblGrandTotal').html("Grand Total : " + gTotal);
        $("#totalEmployeeAmount").html(gTotal);
    }

    function sumFooterValuesUnchecked() {
        var totalBasic = 0, totalHousing = 0, totalConveyance = 0, totalMedical = 0;
        var totalAnnual = 0, totalOvertime = 0, totalOthers = 0, totalEncash = 0;
        var totalCount = 0;
        $('input:checkbox').each(function () {
            var basic = $(this).closest('tr').find('td').eq(5).text();
            var housing = $(this).closest('tr').find('td').eq(6).find('input').val();
            var conveyance = $(this).closest('tr').find('td').eq(7).find('input').val();
            var medical = $(this).closest('tr').find('td').eq(8).find('input').val();
            var annual = $(this).closest('tr').find('td').eq(9).find('input').val();
            var overtime = $(this).closest('tr').find('td').eq(10).find('input').val();
            var others = $(this).closest('tr').find('td').eq(11).find('input').val();
            var encash = $(this).closest('tr').find('td').eq(12).find('input').val();

            if (basic > 0) {
                totalBasic = parseFloat(totalBasic) + parseFloat(basic);
                totalCount = totalCount + 1;
            }
            if (housing > 0) { totalHousing = parseFloat(totalHousing) + parseFloat(housing); }
            if (conveyance > 0) { totalConveyance = parseFloat(totalConveyance) + parseFloat(conveyance); }
            if (medical > 0) { totalMedical = parseFloat(totalMedical) + parseFloat(medical); }
            if (annual > 0) { totalAnnual = parseFloat(totalAnnual) + parseFloat(annual); }
            if (overtime > 0) { totalOvertime = parseFloat(totalOvertime) + parseFloat(overtime); }
            if (others > 0) { totalOthers = parseFloat(totalOthers) + parseFloat(others); }
            if (encash > 0) { totalEncash = parseFloat(totalEncash) + parseFloat(encash); }




        });

        $("#totalCount").html(totalCount);

        $("#totalBasic").html(totalBasic);
        $("#totalHousing").html(totalHousing);
        $("#totalConveyance").html(totalConveyance);
        $("#totalMedical").html(totalMedical);
        $("#totalAnnual").html(totalAnnual);
        $("#totalOvertime").html(totalOvertime);
        $("#totalOthers").html(totalOthers);
        $("#totalEncash").html(totalEncash);

        var gTotal = totalBasic + totalHousing + totalConveyance + totalMedical + totalAnnual + totalOvertime + totalOthers + totalEncash;
        $('#lblGrandTotal').html("Grand Total : " + gTotal);
    }

    function GenerateSif() {
        if ($('#CompanyId').val() == '') {
            $('#lblerrorMessage').text('Please select company');
            $('#diverrorMessage').show();
            return false;
        }

        if ($('#Year').val() == '') {
            $('#lblerrorMessage').text('Please select Year');
            $('#diverrorMessage').show();
            return false;
        }

        if ($('#Month').val() == '') {
            $('#lblerrorMessage').text('Please select Month');
            $('#diverrorMessage').show();
            return false;
        }

        if ($("#SifEmployee input:checkbox:checked").length == 0) {
            $('#lblerrorMessage').text('Please select employee to generate sif');
            $('#diverrorMessage').show();
            return false;
        }
        var companyId = $('#CompanyId').val();
        var year = $('#Year').val();
        var month = $('#Month').val();
        var empId = [];
        var emprouting = [], empIBAN = [], empPersonalNo = [], basic = [], LeaveDay =[];
        var housing = [], conveyance = [], medical = [],
            annual = [], overtime = [], others = [], encash = [];

        $("#SifEmployee input:checkbox:checked").each(function () {
            if ($(this).attr('id') == 'chkAll') {
            }
            else {
                empId.push($(this).closest('tr').find('td').eq(0).find('input').attr('id'));
                empPersonalNo.push($(this).closest('tr').find('td').eq(2).text());
                emprouting.push($(this).closest('tr').find('td').eq(3).text());
                empIBAN.push($(this).closest('tr').find('td').eq(4).text());
                basic.push($(this).closest('tr').find('td').eq(5).text());

                housing.push($(this).closest('tr').find('td').eq(6).find('input').val());
                conveyance.push($(this).closest('tr').find('td').eq(7).find('input').val());
                medical.push($(this).closest('tr').find('td').eq(8).find('input').val());
                annual.push($(this).closest('tr').find('td').eq(9).find('input').val());
                overtime.push($(this).closest('tr').find('td').eq(10).find('input').val());
                others.push($(this).closest('tr').find('td').eq(11).find('input').val());
                encash.push($(this).closest('tr').find('td').eq(12).find('input').val());
                LeaveDay.push($(this).closest('tr').find('td').eq(13).find('input').val());
            }
        })

        var dataParam = {
            selectedCompanyId: companyId,
            Month: month,
            Year: year,
            EmpId: empId,
            PersonalNo : empPersonalNo,
            RoutingCode: emprouting,
            IBAN: empIBAN,
            Basic: basic,
            Housing: housing,
            Conveyance: conveyance,
            Medical: medical,
            Annual: annual,
            Overtime: overtime,
            Others: others,
            Encashment: encash,
            LeaveDays:LeaveDay
        }

        $.ajax({
            url: '@Url.Action("GenerateSif", "Sif", new { q = Request.QueryString["q"].ToString() })',
            type: "POST",
            data: dataParam,
            traditional: true,
            success: function (response) {
                if (response.success == false) {
                    $('#lblerrorMessage').text(response.response);
                    $('#diverrorMessage').show();
                    return false;
                }
                else {
                    var str = response.message;
                    if (str != '') {
                        var resStr = str.split(';');

                        var status = '';
                        for (var i = 0; i < resStr.length; i++) {
                            status += resStr[i] + '<br/>';
                        }

                        $("#SuccessSummary").show();
                        $("#lblSuccessSummary").html(status);
                        status = "";
                    }

                    var failed = response.failMessage;
                    if (failed != '') {
                        var resFailStr = failed.split(';');
                       
                        var failedstatus = '';
                        for (var i = 0; i < resFailStr.length; i++) {
                            failedstatus += resFailStr[i] + '<br/>';
                            console.log(failedstatus);
                        }
                        
                        $("#ErrorSummary").show();
                        $("#lblErrorSummary").html(failedstatus);
                        status = "";
                    }
                    
                    $("#mySifSummaryModal").modal();
                    getEmployees();
                }
            },
            error: function (ex) {
                $("#myModalError").modal();
                $("#lblError").html(ex.responseText);

                
            }
        });
    }

    function fillSubAgents(agentId) {
        if (agentId == '') {
            agentId = '0';
        }
        $.ajax({
            url: '@Url.Action("FillSubAgent", "Common", new { q = Request.QueryString["q"].ToString() })',
            type: 'post',
            data: { AgentId: agentId },
            //datatype: 'json',
            success: function (data) {
                var items = [];
                items.push("<option value='0'>" + "-- Select Sub Agent --" + "</option>"); //first item
                if (data.SubAgent != null) {
                    for (var i = 0; i < data.SubAgent.length; i++) {
                        items.push("<option value=" + data.SubAgent[i].Value + ">" + data.SubAgent[i].Text + "</option>");
                    }

                    $("#SubAgentId").html(items.join(' '));

                    $('#SubAgentId').trigger("chosen:updated");
                }
                fillCompanies(agentId);
            }, error: function (ex) {
                //hideAjaxLoader();
                //myAlert.Alert("Error", ex.responseText);
                alert(ex);
            }
        });
    }

    function fillCompanies(agentId) {
        if (agentId == '') {
            agentId = '0';
        }
        $.ajax({
            url: '@Url.Action("FillCompany", "Common", new { q = Request.QueryString["q"].ToString() })',
            type: 'post',
            data: { AgentId: agentId },
            //datatype: 'json',
            success: function (data) {
                var items = [];
                items.push("<option value='0'>" + "-- Select Company --" + "</option>"); //first item
                if (data.Company != null) {
                    for (var i = 0; i < data.Company.length; i++) {
                        items.push("<option value=" + data.Company[i].Value + ">" + data.Company[i].Text + "</option>");
                    }

                    $("#CompanyId").html(items.join(' '));

                    $('#CompanyId').trigger("chosen:updated");
                }

            }, error: function (ex) {
                //hideAjaxLoader();
                //myAlert.Alert("Error", ex.responseText);
                alert(ex);
            }
        });
    }
</script>
